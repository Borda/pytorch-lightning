# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  branches:
    include:
      - '*'  # must quote since "*" is a YAML reserved character; we want a string
pr:
  - master
  - release/*

pool: dsvm-agents

strategy:
  matrix:
    Python36:
      python.version: '3.6'
    Python37:
      python.version: '3.7'
    Python38:
      python.version: '3.8'

# ToDo: this need to have installed docker in the base image...
# base ML image: mcr.microsoft.com/azureml/openmpi3.1.2-cuda10.2-cudnn8-ubuntu18.04
#container: pytorchlightning/pytorch_lightning:base-cuda-py3.7-torch1.6
#container: "pytorchlightning/pytorch_lightning:base-cuda-py$[ variables['python.version'] ]-torch1.6"
container:
    image: mcr.microsoft.com/azureml/openmpi3.1.2-cuda10.2-cudnn8-ubuntu18.04
    #endpoint: azureContainerRegistryConnection
    options: "--runtime=nvidia -e NVIDIA_VISIBLE_DEVICES=all"

steps:
- bash: |
    #wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-ubuntu1804.pin
    #sudo mv cuda-ubuntu1804.pin /etc/apt/preferences.d/cuda-repository-pin-600
    #sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
    #sudo add-apt-repository "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/ /"
    #sudo apt-get update
    #sudo apt-get -y install cuda
    lspci | egrep 'VGA|3D'
    whereis nvidia
    nvidia-smi
  displayName: 'NVIDIA'
- bash: |
    sudo apt-get install -y python$(python.version)
    sudo update-alternatives --install /usr/bin/python python /usr/bin/python$(python.version) 1
    sudo update-alternatives --config python
  displayName: 'Install python'
- bash: |
    python --version
    sudo apt-get install -y python3-distutils
    curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
    sudo python get-pip.py
    pip --version
  displayName: 'Install pip'

- bash: |
    sudo apt-get install -y cmake
    # python -m pip install "pip==20.1"
    pip install --requirement requirements.txt --find-links https://download.pytorch.org/whl/cpu/torch_stable.html
    python -c "fname = 'requirements/extra.txt' ; lines = [line for line in open(fname).readlines() if 'fairscale' not in line] ; open(fname, 'w').writelines(lines)"
    python -c "fname = 'requirements/extra.txt' ; lines = [line for line in open(fname).readlines() if 'horovod' not in line] ; open(fname, 'w').writelines(lines)"
    pip install --requirement ./requirements/devel.txt --upgrade-strategy only-if-needed
    pip list
  displayName: 'Install dependencies'

- bash: |
    cd legacy
    # wget is simpler but does not work on Windows
    python -c "from urllib.request import urlretrieve ; urlretrieve('https://pl-public-data.s3.amazonaws.com/legacy/checkpoints.zip', 'checkpoints.zip')"
    ls -l .
    unzip -o checkpoints.zip
    ls -l checkpoints/
  displayName: 'Get legacy checkpoints'

- bash: |
    python -m coverage run --source pytorch_lightning -m pytest pytorch_lightning tests pl_examples -v --durations=50
  displayName: 'Testing'

- bash: |
    python -m coverage report
    python -m coverage xml
  displayName: 'Statistics'
